/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiEquipmentGet } from '../fn/equipment/api-equipment-get';
import { ApiEquipmentGet$Params } from '../fn/equipment/api-equipment-get';
import { apiEquipmentIdGet } from '../fn/equipment/api-equipment-id-get';
import { ApiEquipmentIdGet$Params } from '../fn/equipment/api-equipment-id-get';
import { Equipment } from '../models/equipment';

@Injectable({ providedIn: 'root' })
export class EquipmentService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiEquipmentGet()` */
  static readonly ApiEquipmentGetPath = '/api/Equipment';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiEquipmentGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEquipmentGet$Response(params?: ApiEquipmentGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<Equipment>>> {
    return apiEquipmentGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiEquipmentGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEquipmentGet(params?: ApiEquipmentGet$Params, context?: HttpContext): Observable<Array<Equipment>> {
    return this.apiEquipmentGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<Equipment>>): Array<Equipment> => r.body)
    );
  }

  /** Path part for operation `apiEquipmentIdGet()` */
  static readonly ApiEquipmentIdGetPath = '/api/Equipment/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiEquipmentIdGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEquipmentIdGet$Response(params: ApiEquipmentIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<Equipment>>> {
    return apiEquipmentIdGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiEquipmentIdGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiEquipmentIdGet(params: ApiEquipmentIdGet$Params, context?: HttpContext): Observable<Array<Equipment>> {
    return this.apiEquipmentIdGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<Equipment>>): Array<Equipment> => r.body)
    );
  }

}
