/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiScheduleMondayGet } from '../fn/schedule/api-schedule-monday-get';
import { ApiScheduleMondayGet$Params } from '../fn/schedule/api-schedule-monday-get';
import { apiSchedulePost } from '../fn/schedule/api-schedule-post';
import { ApiSchedulePost$Params } from '../fn/schedule/api-schedule-post';
import { WeeklySchedule } from '../models/weekly-schedule';

@Injectable({ providedIn: 'root' })
export class ScheduleService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiScheduleMondayGet()` */
  static readonly ApiScheduleMondayGetPath = '/api/Schedule/{monday}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiScheduleMondayGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiScheduleMondayGet$Response(params: ApiScheduleMondayGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<WeeklySchedule>>> {
    return apiScheduleMondayGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiScheduleMondayGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiScheduleMondayGet(params: ApiScheduleMondayGet$Params, context?: HttpContext): Observable<Array<WeeklySchedule>> {
    return this.apiScheduleMondayGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<WeeklySchedule>>): Array<WeeklySchedule> => r.body)
    );
  }

  /** Path part for operation `apiSchedulePost()` */
  static readonly ApiSchedulePostPath = '/api/Schedule';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiSchedulePost()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  apiSchedulePost$Response(params?: ApiSchedulePost$Params, context?: HttpContext): Observable<StrictHttpResponse<boolean>> {
    return apiSchedulePost(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiSchedulePost$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  apiSchedulePost(params?: ApiSchedulePost$Params, context?: HttpContext): Observable<boolean> {
    return this.apiSchedulePost$Response(params, context).pipe(
      map((r: StrictHttpResponse<boolean>): boolean => r.body)
    );
  }

}
