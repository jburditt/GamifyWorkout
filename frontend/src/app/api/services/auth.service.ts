/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiAuthLogoutGet } from '../fn/auth/api-auth-logout-get';
import { ApiAuthLogoutGet$Params } from '../fn/auth/api-auth-logout-get';
import { apiAuthWhoamiGet } from '../fn/auth/api-auth-whoami-get';
import { ApiAuthWhoamiGet$Params } from '../fn/auth/api-auth-whoami-get';
import { User } from '../models/user';

@Injectable({ providedIn: 'root' })
export class AuthService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiAuthWhoamiGet()` */
  static readonly ApiAuthWhoamiGetPath = '/api/Auth/whoami';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiAuthWhoamiGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiAuthWhoamiGet$Response(params?: ApiAuthWhoamiGet$Params, context?: HttpContext): Observable<StrictHttpResponse<User>> {
    return apiAuthWhoamiGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiAuthWhoamiGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiAuthWhoamiGet(params?: ApiAuthWhoamiGet$Params, context?: HttpContext): Observable<User> {
    return this.apiAuthWhoamiGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<User>): User => r.body)
    );
  }

  /** Path part for operation `apiAuthLogoutGet()` */
  static readonly ApiAuthLogoutGetPath = '/api/Auth/logout';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiAuthLogoutGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiAuthLogoutGet$Response(params?: ApiAuthLogoutGet$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiAuthLogoutGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiAuthLogoutGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiAuthLogoutGet(params?: ApiAuthLogoutGet$Params, context?: HttpContext): Observable<void> {
    return this.apiAuthLogoutGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
